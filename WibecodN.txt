ARTIFICIAL INTELLIGENCE
 Engineers Are Using 
AI for “Vibe Coding”  
Programming’s newest 
trend is to code without 
writing code
 BY MATTHEW S. SMITH
 In a viral post on X in February, Andrej Karpathy—a computer scientist 
and founding member of OpenAI—described a style of programming 
in which software engineers “give in to the vibes, embrace exponen
tials, and forget that the code even exists.” Karpathy termed the tech
nique “vibe coding.”
 It turns out I’d already been practicing it: Since the fall of 2024, I’ve 
used AI to code several personal projects, including creating a graphical 
user interface for AI speech-to-text transcription on my Windows laptop 
and a JavaScript app for tracking initiative in tabletop games.
 Though I’ve played with HTML and Python in the distant past, my 
knowledge of programming is limited, and I can’t explain in detail how 
the AI-generated code in my programs functions. But it works, and I’m 
not the only one embracing the trend.
 Prasad Naik is a senior engineer at Gripple USA, based in Illinois, which 
builds wire joining and tension systems used to secure things like plumbing 
and gas pipes in commercial buildings. Naik isn’t a software engineer, but 
he recently developed two software tools to help sales 
and other teams outside of engineering understand 
which product is right for a use case.
 Naik began by revisiting an iPad app he had devel
oped for the company over a decade ago. He’d pro
grammed it in C and he wanted to convert it to a 
modern JavaScript Web app. But he’d never worked 
with JavaScript before.
 “I remember that [the original app] took me 
almost a month, because I had to study a lot of things 
I didn’t understand,” says Naik. “To my surprise, I 
managed to [convert it to JavaScript] in just 2 hours, 
using step-by-step directions from ChatGPT.” Naik 
didn’t use the code exactly as generated, but he esti
mates that more than 90 percent of the final code was 
generated by ChatGPT.
 After that success, Naik built a more complex app 
that connects to a server to access information about 
hardware products. The entire project, including 
deployment, took about a week and a half, and Naik 
is doubtful he could have pulled it off without AI tools.
 Jason Touleyrou, a data-engineering manager 
who currently works for Michigan-based Corewell 
Health, uses AI-assisted coding to rapidly test new 
ideas. “Speed to ideation is critical,” he says. “If I have 
an idea, and my team isn’t on board, can I put together 
a scrappy project that proves its merit without wast
ing anyone’s time?”
 Touleyrou has relied on AI to code using tools 
and programming languages he has little or no prior 
experience with. As an example, he pointed to a 
coffee-tracking tool he built for his personal website. 
The tool uses several Google Cloud services, such 
as BigQuery and Pub/Sub, which he’d never touched 
in his professional career.
 The key to vibe coding, Touleyrou says, is the work
f
 low. He believes you should start projects with a 
well-defined idea before asking an AI tool to generate 
code. Once the code is generated, the AI can move into 
an advisory role. Developers should also continue to 
use tools that ensure code quality , such as “linting 
tools,” which identify sources of obvious bugs.
 “It’s not an alternative to knowing the basics. But 
I just can’t look back knowing that I can build my 
initial proof of concept in 30 minutes, and then also 
have four additional iterations in 4 hours,” says 
Touleyrou.
 Taher Vohra, a software engineer with 25 years of 
experience, contends that just using AI to iterate on 
software more quickly and easily isn’t vibe coding.
 “I took the vibe-coding definition to heart: that 
I will not look at code,” Vohra says. And, sticking to 
the literal interpretation of vibe coding, he quickly 
points out the idea’s shortcomings. “As I went 
deeper, I found that specifying what I want the AI 
to do is turning out to be a harder problem than 
doing it myself.”
 That’s not to say Vohra is against using AI for pro
gramming; he uses multiple AI assistants, such as 
Cursor, to provide recommendations as he works. 
Still, he stresses that developers programming pro
duction-ready code need to keep an eye on the code 
to ensure they have a proper understanding of how 
it functions and can identify subtle problems that an 
AI assistant may miss.
 Naik, Touleyrou, and Vohra all agree on one par
ticular point: Vibe coding can help engineers gain 
skills in programming languages and tech stacks they 
don’t yet understand.
 “My advice to junior engineers is, don’t just think 
of vibe coding as a speed improvement for a skill you 
already have. Think of it as an accelerator for gaining 
new skills,” says Vohra. “If you’re a front-end engineer 
and want to become a full-stack engineer, it’s an excel
lent way to become a full-stack engineer in a few 
months, as opposed to two years.”  